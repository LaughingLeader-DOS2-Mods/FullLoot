Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLFULOOT_InitSettings();
KBSECTION

PROC
LLFULOOT_InitSettings()
THEN
DB_LLFULOOT_ArmorSlots("Helmet");
DB_LLFULOOT_ArmorSlots("Breast");
DB_LLFULOOT_ArmorSlots("Leggings");
DB_LLFULOOT_ArmorSlots("Belt");
DB_LLFULOOT_ArmorSlots("Boots");
DB_LLFULOOT_ArmorSlots("Gloves");
DB_LLFULOOT_ArmorSlots("Amulet");
DB_LLFULOOT_ArmorSlots("Ring");
DB_LLFULOOT_ArmorSlots("Ring2");
//DB_LLFULOOT_TemplateBlacklist("EQ_Avatar_LLFULOOT_BeefPower_f26caedf-9509-4687-bcac-1f596060bf57");

PROC
LLFULOOT_Updater_VersionUpdated((STRING)_Version, "1.0.3.1")
THEN
LLFULOOT_InitSettings();

//REGION TRADE_TREASURE_FLAGS
IF
TradeGenerationEnded(_Trader)
AND
ObjectGetFlag(_Trader, "LLFULOOT_GeneratedTradeTreasure", 0)
THEN
ObjectSetFlag(_Trader, "LLFULOOT_GeneratedTradeTreasure");

IF
RequestTrade(_Player, _Trader)
AND
ObjectGetFlag(_Trader, "LLFULOOT_GeneratedTradeTreasure", 0)
THEN
ObjectSetFlag(_Trader, "LLFULOOT_GeneratedTradeTreasure");
//END_REGION

QRY
LLFULOOT_QRY_CanFullyLoot((CHARACTERGUID)_Character)
AND
IsTagged(_Character, "LLFULOOT_LootDisabled", 0)
AND
NOT DB_IsStoryNpc(_Character)
AND
CharacterIsPlayer(_Character, 0)
AND
CharacterIsSummon(_Character, 0)
AND
CharacterIsPartyFollower(_Character, 0)
THEN
DB_NOOP(1);
//END_REGION

//REGION DYING
IF
CharacterStatusAttempt(_Character, "DYING", _)
AND
NOT DB_GlobalFlag("LLFULOOT_LootDisabled")
AND
CharacterCanTrade(_Character, 1)
AND
IsTagged(_Character, "TRADER", 1)
AND
LLFULOOT_QRY_CanFullyLoot(_Character)
AND
ObjectGetFlag(_Character, "LLFULOOT_GeneratedTradeTreasure", 0)
AND
NOT LLFULOOT_QRY_Trader_TreasureWasGenerated(_Character)
AND
GetPosition(_Character, _x, _y, _z)
AND
CharacterGetHostCharacter(_Host)
AND
CreateItemTemplateAtPosition("S_LLFULOOT_InvisibleBackpack_394d4e05-b258-4b3f-a78b-eff97a25b231", _x, _y, _z, _Backpack)
THEN
ObjectSetFlag(_Character, "LLFULOOT_GeneratedTradeTreasure");
MoveAllItemsTo(_Character, _Backpack, 0, 0, 0);
GenerateItems(_Host, _Character);
ItemSetOwner(_Backpack, _Character);
DebugBreak("[LLFULOOT:CharacterStatusAttempt(DYING)] Trader never generated items. Forced a trade generation.");
ProcObjectTimer(_Backpack, "LLFULOOT_Timers_MoveItemsBackToOwner", 250);

PROC
ProcObjectTimerFinished((ITEMGUID)_Backpack, "LLFULOOT_Timers_MoveItemsBackToOwner")
AND
ItemGetOwner(_Backpack, _Character)
THEN
MoveAllItemsTo(_Backpack, _Character, 0, 0, 0);
ProcObjectTimer(_Backpack, "LLFULOOT_Timers_DeleteBackpack", 250);

IF
CharacterStatusAttempt(_Character, "DYING", _)
AND
NOT DB_GlobalFlag("LLFULOOT_LootDisabled")
AND
DB_GlobalFlag("LLFULOOT_AdjustGoldAmounts")
AND
IsTagged(_Character, "TRADER", 1)
AND
LLFULOOT_QRY_CanFullyLoot(_Character)
THEN
LLFULOOT_StoreGoldAmount(_Character);

IF
CharacterStatusAttempt(_Character, "DYING", _)
AND
NOT DB_GlobalFlag("LLFULOOT_LootDisabled")
AND
LLFULOOT_QRY_CanFullyLoot(_Character)
AND
GlobalGetFlag("LLFULOOT_EquippedArmorLootable", _Armor)
AND
GlobalGetFlag("LLFULOOT_EquippedWeaponsLootable", _Weapons)
AND
GetPosition(_Character, _x, _y, _z)
AND
CreateItemTemplateAtPosition("S_LLFULOOT_InvisibleBackpack_394d4e05-b258-4b3f-a78b-eff97a25b231", _x, _y, _z, _Backpack)
THEN
LLFULOOT_MoveArmor(_Character, _Backpack, _Armor);
LLFULOOT_MoveWeapons(_Character, _Backpack, _Weapons);
MoveAllItemsTo(_Character, _Backpack, 0, 0, 0);
DebugBreak("[LLFULOOT:CharacterStatusAttempt(DYING)] Moved all items to a backpack.");
DB_LLFULOOT_Temp_TraderBackpack(_Character, _Backpack);

PROC
LLFULOOT_MoveArmor((CHARACTERGUID)_Character, (ITEMGUID)_Backpack, 1)
AND
DB_LLFULOOT_ArmorSlots(_Slot)
AND
CharacterGetEquippedItem(_Character, _Slot, (ITEMGUID)_Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
THEN
//CharacterUnequipItem(_Character, _Item);
ItemToInventory(_Item, _Backpack);

PROC
LLFULOOT_MoveWeapons((CHARACTERGUID)_Character, (ITEMGUID)_Backpack, 1)
AND
CharacterGetEquippedItem(_Character, "Weapon", (ITEMGUID)_Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
THEN
//CharacterUnequipItem(_Character, _Item);
ItemToInventory(_Item, _Backpack);

PROC
LLFULOOT_MoveWeapons((CHARACTERGUID)_Character, (ITEMGUID)_Backpack, 1)
AND
CharacterGetEquippedItem(_Character, "Shield", (ITEMGUID)_Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
THEN
CharacterUnequipItem(_Character, _Item);
ItemToInventory(_Item, _Backpack);

IF
ItemAddedToContainer(_Item, _Backpack)
AND
DB_LLFULOOT_Temp_TraderBackpack(_Character, _Backpack)
AND
GetTemplate(_Item, _Template)
AND
StringContains(_Template, "EQ_Avatar", 1)
THEN
ItemRemove(_Item);

IF
ItemAddedToContainer(_Item, _Backpack)
AND
DB_LLFULOOT_Temp_TraderBackpack(_Character, _Backpack)
AND
SysCount("DB_LLFULOOT_TemplateBlacklist", 1, _Count)
AND
_Count > 0
AND
GetTemplate(_Item, _Template)
AND
DB_LLFULOOT_TemplateBlacklist((STRING)_Template)
THEN
ItemRemove(_Item);

QRY
LLFULOOT_QRY_EitherCharacterIsAPlayer((CHARACTERGUID)_Owner, (CHARACTERGUID)_Attacker)
AND
CharacterIsPlayer(_Owner, 1)
THEN
DB_NOOP(1);

QRY
LLFULOOT_QRY_EitherCharacterIsAPlayer((CHARACTERGUID)_Owner, (CHARACTERGUID)_Attacker)
AND
CharacterIsPlayer(_Attacker, 1)
THEN
DB_NOOP(1);

IF
CharacterKilledBy(_Character, _Owner, _Attacker)
AND
GlobalGetFlag("LLFULOOT_PVPLootEnabled", 1)
AND
IsTagged(_Character, "LLFULOOT_LootDisabled", 0)
AND
CharacterIsPlayer(_Character, 1)
AND
CharacterIsSummon(_Character, 0)
AND
LLFULOOT_QRY_EitherCharacterIsAPlayer(_Owner, _Attacker)
AND
CharacterIsInPartyWith(_Character, _Owner, 0)
THEN
CharacterSetCorpseLootable(_Character, 1);
DebugBreak("[LLFULOOT:CharacterKilledBy] [PVP Loot] Player killed by another player from a different party. Made corpse lootable.");

IF
CharacterDied(_Character)
AND
DB_LLFULOOT_Temp_TraderBackpack(_Character, _Backpack)
THEN
NOT DB_LLFULOOT_Temp_TraderBackpack(_Character, _Backpack);
MoveAllItemsTo(_Backpack, _Character, 1, 1, 0);
ProcObjectTimer(_Backpack, "LLFULOOT_Timers_DeleteBackpack", 250);
DebugBreak("[LLFULOOT:CharacterDied] Moved all items back to character.");
SetStoryEvent(_Character, "LLFULOOT_LootSet");

PROC
ProcObjectTimerFinished((ITEMGUID)_Backpack, "LLFULOOT_Timers_DeleteBackpack")
THEN
ItemRemove(_Backpack);

IF
StoryEvent((CHARACTERGUID)_Character, "LLFULOOT_LootSet")
AND
IsTagged(_Character, "FullLoot_MakeLootable", 1)
THEN
CharacterSetCorpseLootable(_Character, 1);

IF
StoryEvent((CHARACTERGUID)_Character, "LLFULOOT_LootSet")
AND
IsTagged(_Character, "FullLoot_MakeLootable", 0)
AND
CharacterCanTrade(_Character, 1)
THEN
CharacterSetCorpseLootable(_Character, 1);

IF
CharacterStatusRemoved(_Character, "DYING", _)
AND
CharacterIsDead(_Character, 0)
AND
DB_LLFULOOT_Temp_TraderBackpack(_Character, _Backpack)
THEN
DebugBreak("[LLFULOOT:CharacterStatusRemoved(DYING)] Character didn't die. Moving items back and removing backpack.");
NOT DB_LLFULOOT_Temp_TraderBackpack(_Character, _Backpack);
MoveAllItemsTo(_Backpack, _Character, 1, 1, 0);
ProcObjectTimer(_Backpack, "LLFULOOT_Timers_DeleteBackpack", 250);
SetStoryEvent(_Character, "LLFULOOT_FullLootCancelled");

IF
StoryEvent((CHARACTERGUID)_Character, "LLFULOOT_FullLootCancelled")
AND
DB_LLFULOOT_Temp_GoldAmount(_Character, _SetAmount)
THEN
NOT DB_LLFULOOT_Temp_GoldAmount(_Character, _SetAmount);

IF
StoryEvent((CHARACTERGUID)_Character, "LLFULOOT_LootSet")
AND
DB_LLFULOOT_Temp_GoldAmount(_Character, _SetAmount)
THEN
LLFULOOT_RemoveGold(_Character);
ProcObjectTimer(_Character, "LLFULOOT_Timers_AdjustGold", 250);

PROC
LLFULOOT_StoreGoldAmount((CHARACTERGUID)_Character)
AND
NOT DB_LLFULOOT_Temp_GoldAmount(_Character, _)
AND
DB_GlobalFlag("LLFULOOT_GoldReduction_Fourth")
AND
CharacterGetGold(_Character, _GoldAmount)
AND
IntegerDivide(_GoldAmount, 4, _SetAmount)
THEN
DB_LLFULOOT_Temp_GoldAmount(_Character, _SetAmount);

PROC
LLFULOOT_StoreGoldAmount((CHARACTERGUID)_Character)
AND
NOT DB_LLFULOOT_Temp_GoldAmount(_Character, _)
AND
DB_GlobalFlag("LLFULOOT_GoldReduction_Half")
AND
CharacterGetGold(_Character, _GoldAmount)
AND
IntegerDivide(_GoldAmount, 2, _SetAmount)
THEN
DB_LLFULOOT_Temp_GoldAmount(_Character, _SetAmount);

PROC
LLFULOOT_RemoveGold((CHARACTERGUID)_Character)
AND
GetItemForItemTemplateInInventory(_Character, "LOOT_Gold_A_1c3c9c74-34a1-4685-989e-410dc080be6f", _Gold)
THEN
ItemRemove(_Gold);
DebugBreak("[LLFULOOT:RemoveGold] Removed gold root template from character.");

/*
PROC
LLFULOOT_RemoveGold((CHARACTERGUID)_Character)
AND
GetItemForItemTemplateInInventory(_Character, "1c3c9c74-34a1-4685-989e-410dc080be6f", _Gold)
THEN
ItemRemove(_Gold);
DebugBreak("[LLFULOOT:RemoveGold] Removed gold from character.");
*/

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLFULOOT_Timers_AdjustGold")
AND
DB_LLFULOOT_Temp_GoldAmount(_Character, _SetAmount)
THEN
NOT DB_LLFULOOT_Temp_GoldAmount(_Character, _SetAmount);
CharacterAddGold(_Character, _SetAmount);
DebugBreak("[LLFULOOT:AdjustGold] Added a reduced amount of previous gold to trader.");
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_FullLoot"